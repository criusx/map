#user       www www;  ## Default: nobody
worker_processes  32;  ## Default: 1
error_log  stderr;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    conf/mime.types;
  include    conf/proxy.conf;
  include    conf/fastcgi.conf;
  index      viewer.html;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" [$uri] $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/global.access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server {
    listen 8000;
    server_name cbatch67045;
    return 301 $scheme://cbatch67045:8002/helios$request_uri;
  }

  server { # server for static assets
    gzip on;
    gzip_types text/html application/x-javascript text/css;
    gzip_min_length 1000;
    listen 8080;
    #server_name  cbatch67045; #domain2.com www.domain2.com;
    server_name  static.*;
    access_log   logs/static.access.log; #  main;
    root         ui;
    #index        viewer/viewer.html;
    try_files    $uri /viewer/viewer.html @error;
    large_client_header_buffers 4 32k;
    error_page 404 /viewer.html;
    add_header Access-Control-Allow-Origin "*";
    # disable cache
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;

    location = / {
        try_files $uri =404 /viewer.html;
    }

    location /images {
        alias ui/viewer/images;
    }

    location /css {
        alias ui/viewer/css;
    }

    location /js {
        alias ui/viewer/js;
    }
    #location ^~ /images/ {
    #    try_files $uri viewer/images =404;
    #}
    #location ~* ^[^\?\&]+\.(css|js|ico|jpg|jpeg)$ {
    #    try_files $uri viewer/js viewer/css viewer/images =404 ; #/viewer.html;
    #}
  }

#  upstream big_server_com {
#    server 127.0.0.3:8000 weight=5;
#    server 127.0.0.3:8001 weight=5;
#    server 192.168.0.1:8000;
#    server 192.168.0.1:8001;
#  }

#  server { # simple load balancing
#    listen          80;
#    server_name     big.server.com;
#    access_log      logs/big.server.access.log main;
#
#    location / {
#      proxy_pass      http://big_server_com;
#    }
#  }
}
